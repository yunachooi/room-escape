-- 1. MEMBER
CREATE TABLE MEMBER (
    MEMBER_ID   VARCHAR2(30)    NOT NULL,
    PASSWORD    VARCHAR2(100)   NOT NULL,
    NAME        VARCHAR2(50),
    PHONE       VARCHAR2(20),
    EMAIL       VARCHAR2(100),
    REG_DATE    DATE,
    ROLE        VARCHAR2(20),
    CONSTRAINT PK_MEMBER PRIMARY KEY (MEMBER_ID)
);

-- 2. BRANCH
CREATE TABLE BRANCH (
    BRANCH_ID   NUMBER          NOT NULL,
    NAME        VARCHAR2(100)   NOT NULL,
    ADDRESS     VARCHAR2(200),
    CONSTRAINT PK_BRANCH PRIMARY KEY (BRANCH_ID)
);

-- 3. THEME_TYPE
CREATE TABLE THEME_TYPE (
    TYPE_ID     NUMBER          NOT NULL,
    TYPE_NAME   VARCHAR2(50),
    CONSTRAINT PK_THEME_TYPE PRIMARY KEY (TYPE_ID)
);

-- 4. TIME_SLOT
CREATE TABLE TIME_SLOT (
    SLOT_ID     NUMBER          NOT NULL,
    TIME_LABEL  VARCHAR2(20),
    CONSTRAINT PK_TIME_SLOT PRIMARY KEY (SLOT_ID)
);

-- 5. THEME
CREATE TABLE THEME (
    THEME_ID        NUMBER          NOT NULL,
    TITLE           VARCHAR2(100)   NOT NULL,
    DESCRIPTION     VARCHAR2(2000),
    THEME_LEVEL           VARCHAR2(20),
    DURATION        NUMBER,
    CAPACITY_MIN    NUMBER          DEFAULT 2,
    CAPACITY_MAX    NUMBER          DEFAULT 4,
    IS_ACTIVE       CHAR(1)         DEFAULT 'Y',
    BRANCH_ID       NUMBER,
    TYPE_ID         NUMBER,
    CONSTRAINT PK_THEME PRIMARY KEY (THEME_ID),
    CONSTRAINT FK_THEME_BRANCH FOREIGN KEY (BRANCH_ID) REFERENCES BRANCH(BRANCH_ID),
    CONSTRAINT FK_THEME_TYPE FOREIGN KEY (TYPE_ID) REFERENCES THEME_TYPE(TYPE_ID)
);

-- 6. THEME_SCHEDULE
CREATE TABLE THEME_SCHEDULE (
    SCHEDULE_ID     NUMBER          NOT NULL,
    THEME_ID        NUMBER,
    RESV_DATE       DATE,
    SLOT_ID         NUMBER,
    IS_BOOKED       CHAR(1),
    CONSTRAINT PK_THEME_SCHEDULE PRIMARY KEY (SCHEDULE_ID),
    CONSTRAINT FK_SCHEDULE_THEME FOREIGN KEY (THEME_ID) REFERENCES THEME(THEME_ID),
    CONSTRAINT FK_SCHEDULE_SLOT FOREIGN KEY (SLOT_ID) REFERENCES TIME_SLOT(SLOT_ID)
);

-- 7. RESERVATION
CREATE TABLE RESERVATION (
    RESV_ID         NUMBER          NOT NULL,
    NUM_PEOPLE      NUMBER,
    REQUEST_MSG     VARCHAR2(500),
    RESV_DATE       DATE,
    MEMBER_ID       VARCHAR2(30),
    SCHEDULE_ID     NUMBER,
    CONSTRAINT PK_RESERVATION PRIMARY KEY (RESV_ID),
    CONSTRAINT FK_RESERVATION_MEMBER FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID),
    CONSTRAINT FK_RESERVATION_SCHEDULE FOREIGN KEY (SCHEDULE_ID) REFERENCES THEME_SCHEDULE(SCHEDULE_ID)
);

-- 8. REVIEW
CREATE TABLE REVIEW (
    REVIEW_ID   NUMBER          NOT NULL,
    RATING      NUMBER,
    CONTENT     VARCHAR2(2000),
    REG_DATE    DATE,
    THEME_ID    NUMBER,
    MEMBER_ID   VARCHAR2(30),
    RESV_ID     NUMBER,
    CONSTRAINT PK_REVIEW PRIMARY KEY (REVIEW_ID),
    CONSTRAINT FK_REVIEW_THEME FOREIGN KEY (THEME_ID) REFERENCES THEME(THEME_ID),
    CONSTRAINT FK_REVIEW_MEMBER FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID),
    CONSTRAINT FK_REVIEW_RESERVATION FOREIGN KEY (RESV_ID) REFERENCES RESERVATION(RESV_ID)
);

-- 9. QNA
CREATE TABLE QNA (
    QNA_ID      NUMBER          NOT NULL,
    TITLE       VARCHAR2(200),
    CONTENT     VARCHAR2(2000),
    PASSWORD    VARCHAR2(50),
    REG_DATE    DATE,
    MEMBER_ID   VARCHAR2(30),
    IS_ANSWERED CHAR(1) DEFAULT 'N',
    CONSTRAINT PK_QNA PRIMARY KEY (QNA_ID)
);
-- 10. QNA_ANSWER
CREATE TABLE QNA_ANSWER (
    QNA_ID      NUMBER          NOT NULL,
    ANSWER      VARCHAR2(2000),
    REG_DATE    DATE,
    ADMIN_ID    VARCHAR2(30),
    CONSTRAINT PK_QNA_ANSWER PRIMARY KEY (QNA_ID),
    CONSTRAINT FK_QNA_TO_QNA_ANSWER_1 FOREIGN KEY (QNA_ID) REFERENCES QNA(QNA_ID),
    CONSTRAINT FK_QNAANSWER_ADMIN FOREIGN KEY (ADMIN_ID) REFERENCES MEMBER(MEMBER_ID)
);

-- 11. NOTICE
CREATE TABLE NOTICE (
    NOTICE_ID   NUMBER          NOT NULL,
    TITLE       VARCHAR2(200),
    CONTENT     VARCHAR2(2000),
    REG_DATE    DATE,
    ADMIN_ID    VARCHAR2(30),
    CONSTRAINT PK_NOTICE PRIMARY KEY (NOTICE_ID),
    CONSTRAINT FK_NOTICE_ADMIN FOREIGN KEY (ADMIN_ID) REFERENCES MEMBER(MEMBER_ID)
);

-- 12. FAQ
CREATE TABLE FAQ (
    FAQ_ID      NUMBER          NOT NULL,
    QUESTION    VARCHAR2(2000),
    ANSWER      VARCHAR2(2000),
    ADMIN_ID    VARCHAR2(30),
    CONSTRAINT PK_FAQ PRIMARY KEY (FAQ_ID),
    CONSTRAINT FK_FAQ_ADMIN FOREIGN KEY (ADMIN_ID) REFERENCES MEMBER(MEMBER_ID)
);

--13. EVENT
CREATE TABLE EVENT (
    EVENT_ID      NUMBER PRIMARY KEY,
    TITLE        VARCHAR2(200) NOT NULL,
    CONTENT       CLOB,
    START_DATE    DATE NOT NULL,
    END_DATE      DATE NOT NULL,
    IS_ACTIVE     CHAR(1),
    REG_DATE      DATE DEFAULT SYSDATE
);

--14. SEQUENCE
CREATE SEQUENCE MEMBER_ID_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE BRANCH_ID_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE REVIEW_ID_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE THEME_TYPE_ID_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE NOTICE_ID_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE QNA_ANSWER_ID_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE TIME_SLOT_ID_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE QNA_ID_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE FAQ_ID_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE THEME_ID_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE RESERVATION_ID_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE THEME_SCHEDULE_ID_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE EVENT_ID_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE RESV_ID_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;

--15. 가장 하위 의존 테이블부터 DROP
DROP TABLE FAQ CASCADE CONSTRAINTS;
DROP TABLE NOTICE CASCADE CONSTRAINTS;
DROP TABLE QNA_ANSWER CASCADE CONSTRAINTS;
DROP TABLE QNA CASCADE CONSTRAINTS;
DROP TABLE REVIEW CASCADE CONSTRAINTS;
DROP TABLE RESERVATION CASCADE CONSTRAINTS;
DROP TABLE THEME_SCHEDULE CASCADE CONSTRAINTS;
DROP TABLE THEME CASCADE CONSTRAINTS;
DROP TABLE TIME_SLOT CASCADE CONSTRAINTS;
DROP TABLE THEME_TYPE CASCADE CONSTRAINTS;
DROP TABLE BRANCH CASCADE CONSTRAINTS;
DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE EVENT CASCADE CONSTRAINTS;

--16. 가장 하위 의존 SEQUENCE부터 DROP
DROP SEQUENCE MEMBER_ID_SEQ;
DROP SEQUENCE BRANCH_ID_SEQ;
DROP SEQUENCE REVIEW_ID_SEQ;
DROP SEQUENCE THEME_TYPE_ID_SEQ;
DROP SEQUENCE NOTICE_ID_SEQ;
DROP SEQUENCE QNA_ANSWER_ID_SEQ;
DROP SEQUENCE TIME_SLOT_ID_SEQ;
DROP SEQUENCE QNA_ID_SEQ;
DROP SEQUENCE FAQ_ID_SEQ;
DROP SEQUENCE THEME_ID_SEQ;
DROP SEQUENCE RESERVATION_ID_SEQ;
DROP SEQUENCE THEME_SCHEDULE_ID_SEQ;
DROP SEQUENCE EVENT_ID_SEQ;
DROP SEQUENCE RESV_ID_SEQ;

--17. 더미데이터
-- BRANCH
INSERT INTO BRANCH (BRANCH_ID, NAME, ADDRESS)
VALUES (BRANCH_ID_SEQ.NEXTVAL, '강남점', '서울 강남구 역삼동 123-45');
INSERT INTO BRANCH (BRANCH_ID, NAME, ADDRESS)
VALUES (BRANCH_ID_SEQ.NEXTVAL, '홍대점', '서울 마포구 서교동 67-89');
INSERT INTO BRANCH (BRANCH_ID, NAME, ADDRESS)
VALUES (BRANCH_ID_SEQ.NEXTVAL, '잠실점', '서울 송파구 잠실동 98-76');

-- THEME_TYPE
INSERT INTO THEME_TYPE (TYPE_ID, TYPE_NAME)
VALUES (THEME_TYPE_ID_SEQ.NEXTVAL, '공포');
INSERT INTO THEME_TYPE (TYPE_ID, TYPE_NAME)
VALUES (THEME_TYPE_ID_SEQ.NEXTVAL, '추리');

-- TIME_SLOT
INSERT INTO TIME_SLOT (SLOT_ID, TIME_LABEL)
VALUES (TIME_SLOT_ID_SEQ.NEXTVAL, '10:00');
INSERT INTO TIME_SLOT (SLOT_ID, TIME_LABEL)
VALUES (TIME_SLOT_ID_SEQ.NEXTVAL, '12:00');
INSERT INTO TIME_SLOT (SLOT_ID, TIME_LABEL)
VALUES (TIME_SLOT_ID_SEQ.NEXTVAL, '14:00');

-- THEME
INSERT INTO THEME (THEME_ID, TITLE, DESCRIPTION, THEME_LEVEL, DURATION, CAPACITY_MIN, CAPACITY_MAX, IS_ACTIVE, BRANCH_ID, TYPE_ID)
VALUES (THEME_ID_SEQ.NEXTVAL, '폐병원의 비밀', '폐쇄된 병원에서 벌어지는 미스터리를 해결하라!', '어려움', 60, 2, 5, 'Y', 1, 1);
INSERT INTO THEME (THEME_ID, TITLE, DESCRIPTION, THEME_LEVEL, DURATION, CAPACITY_MIN, CAPACITY_MAX, IS_ACTIVE, BRANCH_ID, TYPE_ID)
VALUES (THEME_ID_SEQ.NEXTVAL, '탐정의 밤', '탐정이 되어 살인 사건을 해결하라!', '중간', 60, 2, 4, 'Y', 2, 2);
INSERT INTO THEME (THEME_ID, TITLE, DESCRIPTION, THEME_LEVEL, DURATION, CAPACITY_MIN, CAPACITY_MAX, IS_ACTIVE, BRANCH_ID, TYPE_ID)
VALUES (THEME_ID_SEQ.NEXTVAL, '유령의 집', '귀신이 출몰하는 집에서 탈출하라!', '쉬움', 45, 2, 4, 'Y', 3, 1);
INSERT INTO THEME (THEME_ID, TITLE, DESCRIPTION, THEME_LEVEL, DURATION, CAPACITY_MIN, CAPACITY_MAX, IS_ACTIVE, BRANCH_ID, TYPE_ID)
VALUES (THEME_ID_SEQ.NEXTVAL, '시간을 달리는 방', '시간을 넘나드는 미션을 수행하라!', '중간', 60, 2, 5, 'Y', 1, 2);
INSERT INTO THEME (THEME_ID, TITLE, DESCRIPTION, THEME_LEVEL, DURATION, CAPACITY_MIN, CAPACITY_MAX, IS_ACTIVE, BRANCH_ID, TYPE_ID)
VALUES (THEME_ID_SEQ.NEXTVAL, '미로의 저주', '끝없는 미로 속에서 탈출하라.', '어려움', 60, 3, 5, 'Y', 2, 1);
INSERT INTO THEME (THEME_ID, TITLE, DESCRIPTION, THEME_LEVEL, DURATION, CAPACITY_MIN, CAPACITY_MAX, IS_ACTIVE, BRANCH_ID, TYPE_ID)
VALUES (THEME_ID_SEQ.NEXTVAL, '숨겨진 보물찾기', '고대 유적 속 보물을 찾아라.', '쉬움', 45, 2, 4, 'Y', 3, 2);

-- THEME_SCHEDULE
INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 1, TO_DATE('2025-05-27', 'YYYY-MM-DD'), 1, 'N');
INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 1, TO_DATE('2025-05-27', 'YYYY-MM-DD'), 2, 'N');
INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 1, TO_DATE('2025-05-28', 'YYYY-MM-DD'), 3, 'N');

INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 4, TO_DATE('2025-05-27', 'YYYY-MM-DD'), 1, 'N');
INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 4, TO_DATE('2025-05-28', 'YYYY-MM-DD'), 2, 'N');
INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 4, TO_DATE('2025-05-29', 'YYYY-MM-DD'), 3, 'N');

INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 2, TO_DATE('2025-05-29', 'YYYY-MM-DD'), 1, 'N');
INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 2, TO_DATE('2025-05-28', 'YYYY-MM-DD'), 2, 'N');
INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 2, TO_DATE('2025-06-28', 'YYYY-MM-DD'), 3, 'N');

INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 5, TO_DATE('2025-05-27', 'YYYY-MM-DD'), 1, 'N');
INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 5, TO_DATE('2025-05-28', 'YYYY-MM-DD'), 2, 'N');
INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 5, TO_DATE('2025-05-29', 'YYYY-MM-DD'), 3, 'N');

INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 3, TO_DATE('2025-05-28', 'YYYY-MM-DD'), 1, 'N');
INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 3, TO_DATE('2025-05-27', 'YYYY-MM-DD'), 2, 'N');
INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 3, TO_DATE('2025-05-28', 'YYYY-MM-DD'), 3, 'N');

INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 6, TO_DATE('2025-05-29', 'YYYY-MM-DD'), 1, 'N');
INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 6, TO_DATE('2025-05-28', 'YYYY-MM-DD'), 2, 'N');
INSERT INTO THEME_SCHEDULE (SCHEDULE_ID, THEME_ID, RESV_DATE, SLOT_ID, IS_BOOKED)
VALUES (THEME_SCHEDULE_ID_SEQ.NEXTVAL, 6, TO_DATE('2025-05-28', 'YYYY-MM-DD'), 3, 'N');

--EVENT
INSERT INTO EVENT (EVENT_ID, TITLE, CONTENT, START_DATE, END_DATE, IS_ACTIVE, REG_DATE)
VALUES (EVENT_ID_SEQ.NEXTVAL, 'EVT202501', '6월 한정! 전 테마 20% 할인 이벤트 진행 중입니다.', TO_DATE('2025-06-01', 'YYYY-MM-DD'), TO_DATE('2025-06-30', 'YYYY-MM-DD'), 'Y', SYSDATE);
INSERT INTO EVENT (EVENT_ID, TITLE, CONTENT, START_DATE, END_DATE, IS_ACTIVE, REG_DATE)
VALUES (EVENT_ID_SEQ.NEXTVAL, 'EVT202502', '신규 회원가입 시 무료 체험권 제공 이벤트!', TO_DATE('2025-06-01', 'YYYY-MM-DD'), TO_DATE('2025-06-15', 'YYYY-MM-DD'), 'Y', SYSDATE);

--notice
INSERT INTO NOTICE (NOTICE_ID, TITLE, CONTENT, REG_DATE, ADMIN_ID)
VALUES (NOTICE_ID_SEQ.NEXTVAL, '6월 운영 시간 변경 안내', '6월부터 평일 운영시간이 오전 10시부터 오후 10시까지로 변경됩니다.', SYSDATE, 'admin01');
INSERT INTO NOTICE (NOTICE_ID, TITLE, CONTENT, REG_DATE, ADMIN_ID)
VALUES (NOTICE_ID_SEQ.NEXTVAL, '시스템 점검 안내', '6월 5일 새벽 2시~4시까지 시스템 점검이 예정되어 있습니다.', SYSDATE, 'admin01');

--faq
INSERT INTO FAQ (FAQ_ID, QUESTION, ANSWER, ADMIN_ID)
VALUES (FAQ_ID_SEQ.NEXTVAL, '예약 변경은 어떻게 하나요?', '마이페이지 > 예약내역에서 변경 가능합니다.', 'admin01');
INSERT INTO FAQ (FAQ_ID, QUESTION, ANSWER, ADMIN_ID)
VALUES (FAQ_ID_SEQ.NEXTVAL, '테마 난이도는 어떻게 나뉘나요?', '테마마다 쉬움, 중간, 어려움으로 구분되어 있으며 상세 페이지에서 확인 가능합니다.', 'admin01');

--qna 등록
INSERT INTO QNA (QNA_ID, TITLE, CONTENT, PASSWORD, REG_DATE, MEMBER_ID, IS_ANSWERED)
VALUES (QNA_ID_SEQ.NEXTVAL, '예약 취소 문의드립니다.', '예약을 취소하고 싶은데 어디서 해야 하나요?', 'qna1234', SYSDATE, 'user01', 'Y');

--REVIEW 
INSERT INTO REVIEW (REVIEW_ID, RATING, CONTENT, REG_DATE, THEME_ID, MEMBER_ID, RESV_ID)
VALUES (REVIEW_ID_SEQ.NEXTVAL, 5, '시간을 달리는 방 진짜 재밌었어요!', SYSDATE, 1, 'user01', 1);
INSERT INTO REVIEW (REVIEW_ID, RATING, CONTENT, REG_DATE, THEME_ID, MEMBER_ID, RESV_ID)
VALUES (REVIEW_ID_SEQ.NEXTVAL, 4, '미로의 저주는 긴장감 최고였음!', SYSDATE, 2, 'user01', 2);
INSERT INTO REVIEW (REVIEW_ID, RATING, CONTENT, REG_DATE, THEME_ID, MEMBER_ID, RESV_ID)
VALUES (REVIEW_ID_SEQ.NEXTVAL, 3, '탐정의 방은 무난했어요.', SYSDATE, 3, 'user01', 3);
INSERT INTO REVIEW (REVIEW_ID, RATING, CONTENT, REG_DATE, THEME_ID, MEMBER_ID, RESV_ID)
VALUES (REVIEW_ID_SEQ.NEXTVAL, 5, '스토리라인이 좋아서 시간 가는 줄 몰랐어요!', SYSDATE, 1, 'user01', 4);
INSERT INTO REVIEW (REVIEW_ID, RATING, CONTENT, REG_DATE, THEME_ID, MEMBER_ID, RESV_ID)
VALUES (REVIEW_ID_SEQ.NEXTVAL, 2, '너무 쉬워서 좀 지루했어요.', SYSDATE, 1, 'user01', 5);
INSERT INTO REVIEW (REVIEW_ID, RATING, CONTENT, REG_DATE, THEME_ID, MEMBER_ID, RESV_ID)
VALUES (REVIEW_ID_SEQ.NEXTVAL, 4, '미로 구성이 진짜 몰입감 최고였습니다!', SYSDATE, 2, 'user01', 6);
INSERT INTO REVIEW (REVIEW_ID, RATING, CONTENT, REG_DATE, THEME_ID, MEMBER_ID, RESV_ID)
VALUES (REVIEW_ID_SEQ.NEXTVAL, 3, '살짝 무서웠지만 그래도 괜찮았어요.', SYSDATE, 2, 'user01', 7);
INSERT INTO REVIEW (REVIEW_ID, RATING, CONTENT, REG_DATE, THEME_ID, MEMBER_ID, RESV_ID)
VALUES (REVIEW_ID_SEQ.NEXTVAL, 5, '추리력 발휘하기 딱 좋은 테마입니다.', SYSDATE, 3, 'user01', 8);
INSERT INTO REVIEW (REVIEW_ID, RATING, CONTENT, REG_DATE, THEME_ID, MEMBER_ID, RESV_ID)
VALUES (REVIEW_ID_SEQ.NEXTVAL, 1, '힌트가 너무 부족해서 진행이 어려웠어요.', SYSDATE, 3, 'user01', 9);
INSERT INTO REVIEW (REVIEW_ID, RATING, CONTENT, REG_DATE, THEME_ID, MEMBER_ID, RESV_ID)
VALUES (REVIEW_ID_SEQ.NEXTVAL, 4, '친구랑 가서 정말 재밌게 놀다 왔어요!', SYSDATE, 1, 'user01', 10);

SELECT * FROM FAQ ;
SELECT * FROM NOTICE; 
SELECT * FROM QNA_ANSWER ;
SELECT * FROM QNA ;
SELECT * FROM REVIEW ;
SELECT * FROM RESERVATION ;
SELECT * FROM THEME_SCHEDULE ;
SELECT * FROM THEME ;
SELECT * FROM TIME_SLOT ;
SELECT * FROM THEME_TYPE ;
SELECT * FROM BRANCH ;
SELECT * FROM MEMBER ;
SELECT * FROM EVENT;

COMMIT;

--관리자 권한 부여
UPDATE member SET role = 'admin' WHERE member_id = 'admin01';